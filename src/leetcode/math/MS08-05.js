// 递归乘法。 
// 写一个递归函数，不使用 * 运算符， 
// 实现两个正整数的相乘。
// 可以使用加号、减号、位移，但要吝啬一些。

// 示例1:

//  输入：A = 1, B = 10
//  输出：10

// 示例2:
//  输入：A = 3, B = 4
//  输出：12

// 提示:
// 保证乘法范围不会溢出

/**
 * @param {number} A
 * @param {number} B
 * @return {number}
 */
var multiply = function(A, B) {
  // 保证 A > B
  if(A < B) {
    [A, B] = [B, A];
  }

  let res = 0;
  while(B > 0) {
    // 将 B 作为二进制操作，每次右移对应 A * 2
    // 直到 B 为 1为止，此时再加一次 A 结束运算
    if(B & 1 === 1) {
      res += A;
    }
    // 不能用 * ，改成自己加自己
    A += A;
    B = B >> 1;
  }

  return res;
};